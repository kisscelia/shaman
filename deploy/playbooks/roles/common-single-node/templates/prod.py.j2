# {{ ansible_managed }}
from pecan.hooks import TransactionHook, RequestViewerHook
from shaman import models
from prod_db import sqlalchemy_w, sqlalchemy_ro
from prod_api_creds import api_key, api_user


# Server Specific Configurations
server = {
    'port': '8000',
    'host': '0.0.0.0'
}

# Pecan Application Configurations
app = {
    'root': 'shaman.controllers.root.RootController',
    'modules': ['shaman'],
    'default_renderer': 'json',
    'guess_content_type_from_ext': False,
    'template_path': '%(confdir)s/shaman/templates',
    'hooks': [
        TransactionHook(
            models.start,
            models.start_read_only,
            models.commit,
            models.rollback,
            models.clear
        ),
        RequestViewerHook(),
    ],
    'debug': False,
}

logging = {
    'disable_existing_loggers': False,
    'loggers': {
        'root': {'level': 'INFO', 'handlers': ['console']},
        'shaman': {'level': 'DEBUG', 'handlers': ['console']},
        'pecan.commands.serve': {'level': 'DEBUG', 'handlers': ['console']},
        'py.warnings': {'handlers': ['console']},
        '__force_dict__': True
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'color'
        }
    },
    'formatters': {
        'simple': {
            'format': ('%(asctime)s %(levelname)-5.5s [%(name)s]'
                       '[%(threadName)s] %(message)s')
        },
        'color': {
            '()': 'pecan.log.ColorFormatter',
            'format': ('%(asctime)s [%(padded_color_levelname)s] [%(name)s]'
                       '[%(threadName)s] %(message)s'),
            '__force_dict__': True
        }
    }
}

# if this file exists the check at /_health/ will fail
fail_check_trigger_path = "/tmp/fail_check"

chacra_verify_ssl = {{ chacra_verify_ssl|default(False) }}

# production Basic HTTP Auth credentials are imported from prod_api_creds.py

# production database configurations are imported from prod_db.py

RABBIT_HOST = "{{ rabbit_host }}"
RABBIT_USER = "{{ rabbit_user }}"
RABBIT_PW = "{{ rabbit_pw }}"

github_secret = "{{ github_secret }}"
